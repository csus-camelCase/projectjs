<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Search</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="wrapper job-search">
        <h2>Search for Admins</h2>
        
        <!-- Search input box -->
        <div class="input-box">
            <input type="text" id="searchInput" placeholder="Search by admin name or preferences" 
            onkeyup="searchCandidates()">
        </div>
        
        <!-- Form to handle selections -->
        <form id="candidatesForm">
            <!-- Table to display candidate details -->
            <table id="candidatesTable">
                <thead>
                    <tr>
                        <th>Select</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>First Login</th>
                        <th>Last Login</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user=> { %>
                       
                        <tr>
                            <td>
                                <input type="checkbox" name="selectedCandidates" value="<%= user._id %>">
                            </td>
                            <td>
                                <%= user.first_name %>
                            </td>
                            <td>
                                <%= user.last_name %>
                            </td>
                            <td>
                                <%= user.formattedCreatedAt %>
                            </td>
                            <td>
                                <%= user.formattedLastLogin %>
                            </td>
                            <% }) %>  
                        </tr>
                </tbody>
            </table>
            
            <!-- Button to navigate to send-emails.html -->
            <div style="margin-top: 20px;">
                <button type="button" id="submitButton" class="btn">Send Emails to Admins</button>
            </div>
            <!--<div style="margin-top: 20px; text-align: center;">
                <button class="btn" onclick="promptPromoteAdmin()">Promote User to Admin</button>
            </div>-->
        </form>

        <!-- Additional buttons -->
        <div style="margin-top: 20px; text-align: center;">
            <!-- <a href="/send-emails.html" class="btn" style="margin-right: 10px;">Compose Email</a> -->
            <a href="/admin_dashboard.html" class="btn" style="margin-left: 10px;">Back to Dashboard</a>
        </div>
    </div>

    <script>
         
        // Function to filter candidates based on search input
        let debounceTimer;

        document.getElementById('searchInput').addEventListener('input', () => {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(searchCandidates, 300); // Wait 300ms before searching
        });

        async function searchCandidates() {
            const query = document.getElementById('searchInput').value.trim();

            

            try {
                const response = await fetch(`/search-admins?query=${encodeURIComponent(query)}`);
                const candidates = await response.json();
                updateCandidatesTable(candidates);
            } catch (error) {
                console.error('Error fetching candidates:', error);
            }
        }

        function updateCandidatesTable(candidates) {
            const tbody = document.querySelector("#candidatesTable tbody");
            tbody.innerHTML = ""; // Clear existing rows

            candidates.forEach(user => {
                const row = document.createElement("tr");

                row.innerHTML = `
            <td><input type="checkbox" name="selectedCandidates" value="${user._id}"></td>
            <td>${user.first_name}</td>
            <td>${user.last_name}</td>
            <td>${user.formattedCreatedAt}</td>
            <td>${user.formattedLastLogin}</td>
        `;

                tbody.appendChild(row);
            });
        }


        // Handle form submission
        document.getElementById('submitButton').addEventListener('click', async () => {
            const checkboxes = document.querySelectorAll('input[name="selectedCandidates"]:checked');
            const selectedCandidates = Array.from(checkboxes).map(cb => cb.value);

            // Send selected candidates to the server
            try {
                const response = await fetch('/process-selections', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ selectedCandidates })
                });

                if (response.status === 400) {
                    const result = await response.json();
                    alert(result.message); // Show popup if no candidates are selected
                } else if (response.ok) {
                    window.location.href = response.url; // Redirect to send-emails.html
                }
            } catch (error) {
                console.error('Error submitting candidates:', error);
                alert('No candidates selected. Please select at least one candidate.');
            }
        });
        /*async function promptPromoteAdmin() {
        const fullName = prompt("Enter the full name of the user to promote (e.g. John Doe):");

        if (!fullName || !fullName.includes(" ")) {
            alert("Please enter a valid full name (first and last).");
            return;
        }

        const [firstName, ...rest] = fullName.trim().split(" ");
        const lastName = rest.join(" ");

        try {
            const response = await fetch(`/api/users`);
            const users = await response.json();

            const matchedUser = users.find(user =>
                user.first_name?.toLowerCase() === firstName.toLowerCase() &&
                user.last_name?.toLowerCase() === lastName.toLowerCase()
            );

            if (!matchedUser) {
                alert("User not found. Check spelling and try again.");
                return;
            }

            const updateResponse = await fetch(`/api/users/${matchedUser._id}/role`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ role: 'admin', isAdmin: true })
            });

            if (updateResponse.ok) {
                alert(`${fullName} is now an admin!`);
                location.reload();
            } else {
                const error = await updateResponse.json();
                alert("Failed to promote user: " + (error.message || 'Unknown error'));
            }
        } catch (error) {
            console.error("Error promoting user:", error);
            alert("Something went wrong.");
            }
        }*/
    window.addEventListener('DOMContentLoaded', () => {
    searchCandidates();
});
    </script>
</body>
</html>
